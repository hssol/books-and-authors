    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 3, in <module>
    class Author(models.Model):
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 4, in Author
    first_name = models.CharField(max_lenth=45)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 1043, in __init__
    super(CharField, self).__init__(*args, **kwargs)
TypeError: __init__() got an unexpected keyword argument 'max_lenth'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 3, in <module>
    class Author(models.Model):
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 4, in Author
    first_name = models.CharField(max_lenth=45)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 1043, in __init__
    super(CharField, self).__init__(*args, **kwargs)
TypeError: __init__() got an unexpected keyword argument 'max_lenth'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 8, in <module>
    class Book(models.model):
AttributeError: module 'django.db.models' has no attribute 'model'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 8, in <module>
    class Book(models.model):
AttributeError: module 'django.db.models' has no attribute 'model'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 8, in <module>
    class Book(models.model):
AttributeError: module 'django.db.models' has no attribute 'model'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 8, in <module>
    class Book(models.model):
AttributeError: module 'django.db.models' has no attribute 'model'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 8, in <module>
    class Book(models.model):
AttributeError: module 'django.db.models' has no attribute 'model'

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Migrations for 'bAndA':
  apps\bAndA\migrations\0001_initial.py:
    - Create model Author
    - Create model Book

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, bAndA, contenttypes, sessions
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying bAndA.0001_initial... OK
  Applying sessions.0001_initial... OK

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py shell
Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from apps.bAndA import *
>>> Book.objects.create(title="C Sharp", desc="A book about C Sharp")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Book' is not defined
>>> book1 = Book.objects.create(title="C Sharp", desc="A book about C Sharp")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Book' is not defined
>>> Book.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Book' is not defined
>>> book1 = Book.objects.create(title="C Sharp", desc="A book about C Sharp")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Book' is not defined
>>> from apps.bAndA import *
>>> from apps.bAndA.models import *
>>> book1 = Book.objects.create(title="C Sharp", desc="A book about C Sharp")
>>> book2 = Book.objects.create(title="Java", desc="A book about Java")
>>> book3 = Book.objects.create(title="Python", desc="A book about Python")
>>> book4 = Book.objects.create(title="PHP", desc="A book about PHP")
>>> book5 = Book.objects.create(title="Ruby", desc="A book about Ruby")
>>> author1 = Author.objects.create(first_name="Jane", last_name="Austen")
>>> author2 = Author.objects.create(first_name="Emily", last_name="Dickinson")
>>> author3 = Author.objects.create(first_name="Fyodor", last_name="Dostoevksy")
>>> author4 = Author.objects.create(first_name="William", last_name="Shakespeare")
>>> author5 = Author.objects.create(first_name="Lau", last_name="Tzu")
>>>
KeyboardInterrupt
>>> quit()

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Migrations for 'bAndA':
  apps\bAndA\migrations\0002_author_notes.py:
    - Add field notes to author

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, bAndA, contenttypes, sessions
Running migrations:
  Rendering model states... DONE
  Applying bAndA.0002_author_notes... OK

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py shell
Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from apps.bAndA.models import *
>>> Author.objects.all()
<QuerySet [<Author: Author object>, <Author: Author object>, <Author: Author object>, <Author: Author object>, <Author: Author object>]>
>>> Author.objects.all().values()
<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'William', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>)}]>
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C Sharp', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}, {'id': 5, 'title': 'Ruby', 'desc': 'A book about Ruby', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>)}]>
>>> c = Book.objects.get(id=1)
>>> c.title="C#"
>>> c.save()
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}, {'id': 5, 'title': 'Ruby', 'desc': 'A book about Ruby', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>)}]>
>>> c = Author.objects.get(id=4)
>>> c.first_name="Bill"
>>> c.save()
>>> Book.objects.filter(id=1, id=2)
  File "<console>", line 1
SyntaxError: keyword argument repeated
>>> Book.objects.filter(id=(1,2))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1187, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1083, in build_lookup
    return final_lookup(lhs, rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 59, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'tuple'
>>> Book.objects.filter(id=1,2)
  File "<console>", line 1
SyntaxError: positional argument follows keyword argument
>>> Book.objects.filter(id=1 && 2)
  File "<console>", line 1
    Book.objects.filter(id=1 && 2)
                              ^
SyntaxError: invalid syntax
>>> book1
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'book1' is not defined
>>> book1.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'book1' is not defined
>>> Author.objects.all().values()
<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>)}]>
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}, {'id': 5, 'title': 'Ruby', 'desc': 'A book about Ruby', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>)}]>
>>> exit()

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 341, in execute
    django.setup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\__init__.py", line 27, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\apps\config.py", line 199, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 3, in <module>
    class Author(models.Model):
  File "C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors\apps\bAndA\models.py", line 7, in Author
    books = models.ManyToManyField(Book, related_name="authors")
NameError: name 'Book' is not defined

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py makemigrations
Migrations for 'bAndA':
  apps\bAndA\migrations\0003_author_books.py:
    - Add field books to author

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, bAndA, contenttypes, sessions
Running migrations:
  Rendering model states... DONE
  Applying bAndA.0003_author_books... OK

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py shell
Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from apps.bAndA.models import *
>>> Author.objects.all().values()
<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>)}]>
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}, {'id': 5, 'title': 'Ruby', 'desc': 'A book about Ruby', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>)}]>
>>> jane = Author.objects.get(id=1)
>>> csharp = Book.objects.get(id=1)
>>> java = Book.objects.get(id=2)
>>> jane.books.add(csharp,java)
>>> jane
<Author: Author object>
>>> jane.values
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'values'
>>> jane.values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'values'
>>> jane.value
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'value'
>>> jane.books
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x0424CBF0>
>>> jane.books.authors
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'ManyRelatedManager' object has no attribute 'authors'
>>> jane.authors
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'authors'
>>> jane.books.all()
<QuerySet [<Book: Book object>, <Book: Book object>]>
>>> jane.books.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}]>
>>> emily = Author.objects.get(id=2)
>>> python = Book.objects.get(id=3)
>>> emily.books.add(csharp,java,python)
>>> Author.objects.all().values()
<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>)}]>
>>> fyodor = Author.objects.get(id=3)
>>> Book.objects.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}, {'id': 5, 'title': 'Ruby', 'desc': 'A book about Ruby', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 51, 726446, tzinfo=<UTC>)}]>
>>> php = Book.objects.get(id=4)
>>> ruby = Book.objects.get(id=5)
>>> william = Author.objects.get(id=4)
>>> lau = Author.objects.get(id=5)
>>> fyodor.books.add(csharp,java,python,php)
>>> william.books.add(csharp,java,python,php,ruby)
>>> Author.objects.filter(books="python")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'python'
>>> Author.objects.filter(books="Python")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'Python'
>>> Author.objects.filter(authors="Python")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1133, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1019, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1327, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'authors' into field. Choices are: books, created_at, first_name, id, last_name, notes, updated_at
>>> Author.objects.filter(books="authors")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'authors'
>>> Book.objects.filter(authors="Python")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'Python'
>>> Book.objects.filter(authors="python")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'python'
>>> Book.objects.filter(authors="fyodor")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1183, in build_filter
    condition = lookup_class(lhs, value)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\lookups.py", line 19, in __init__
    self.rhs = self.get_prep_lookup()
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\related_lookups.py", line 100, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\fields\__init__.py", line 946, in get_prep_value
    return int(value)
ValueError: invalid literal for int() with base 10: 'fyodor'
>>> Book.objects.filter(authors=3)
<QuerySet [<Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>]>
>>> Book.objects.filter(authors=3).all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}]>
>>> Book.objects.filter(books=3)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1133, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1019, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1327, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'books' into field. Choices are: authors, created_at, desc, id, title, updated_at
>>> Author.objects.filter(authors=3)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1133, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1019, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "C:\Users\k\Desktop\Python_stack\my_environments\djangoPy3Env\lib\site-packages\django\db\models\sql\query.py", line 1327, in names_to_path
    "Choices are: %s" % (name, ", ".join(available)))
django.core.exceptions.FieldError: Cannot resolve keyword 'authors' into field. Choices are: books, created_at, first_name, id, last_name, notes, updated_at
>>> Author.objects.filter(books=3)
<QuerySet [<Author: Author object>, <Author: Author object>, <Author: Author object>]>
>>> Author.objects.filter(books=3).values()
<QuerySet [{'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}]>
>>> python.authors.remove(jane)
>>> jane.values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'values'
>>> jane
<Author: Author object>
>>> jane.all().values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'all'
>>> jane.books
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x051C3ED0>
>>> jane.books.all().values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}]>
>>> lau.books.add(java)
>>> lau.books.values()
<QuerySet [{'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}]>
>>> Author.objects.filter(books=2)
<QuerySet [<Author: Author object>, <Author: Author object>, <Author: Author object>, <Author: Author object>, <Author: Author object>]>
>>> Author.objects.filter(books=2).values()
<QuerySet [{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 38, 47, 410588, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 39, 8, 566369, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevksy', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 41, 33, 351793, tzinfo=<UTC>)}, {'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 42, 15, 577750, tzinfo=<UTC>)}]>
>>> Book.objects.filter(authors=3)
<QuerySet [<Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>]>
>>> Book.objects.filter(authors=3).values()
<QuerySet [{'id': 1, 'title': 'C#', 'desc': 'A book about C Sharp', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 19, 854715, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 47, 17, 69012, tzinfo=<UTC>)}, {'id': 2, 'title': 'Java', 'desc': 'A book about Java', 'created_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 36, 45, 696411, tzinfo=<UTC>)}, {'id': 3, 'title': 'Python', 'desc': 'A book about Python', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 10, 728734, tzinfo=<UTC>)}, {'id': 4, 'title': 'PHP', 'desc': 'A book about PHP', 'created_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 37, 35, 446487, tzinfo=<UTC>)}]>
>>> Author.objects.filter(books=5).values()
<QuerySet [{'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': None, 'created_at': datetime.datetime(2019, 7, 12, 21, 41, 58, 12684, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 7, 12, 21, 49, 27, 266967, tzinfo=<UTC>)}]>
>>> /history

KeyboardInterrupt
>>> doskey/history
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'doskey' is not defined
>>> doskey /history

KeyboardInterrupt
>>> doskey /history > C:\Users\name\Desktop\commands.txt
  File "<console>", line 1
    doskey /history > C:\Users\name\Desktop\commands.txt
                                                       ^
SyntaxError: unexpected character after line continuation character
>>> doskey /history > C:\Users\name\Desktop\commands
  File "<console>", line 1
    doskey /history > C:\Users\name\Desktop\commands
                                                   ^
SyntaxError: unexpected character after line continuation character
>>> exit()

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 doskey /history

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 doskey /history > C:\Users\name\Desktop\commands.txt
The system cannot find the path specified.

C:\Users\k\Desktop\Python_stack\django\django_orm\booksAuthors
(djangoPy3Env) 位 python manage.py shell
Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> history
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>> history>commands.txt
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>> doskey /history
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'doskey' is not defined
>>> history
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>> history()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>> history
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>> %history
  File "<console>", line 1
    %history
    ^
SyntaxError: invalid syntax
>>> history()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'history' is not defined
>>>